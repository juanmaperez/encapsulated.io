{"data":{"allMarkdownRemark":{"totalCount":6,"edges":[{"node":{"id":"9bc5b8c0-1dbc-538c-a97e-1f69ab0f8304","frontmatter":{"title":"Four functions for working with arrays","date":"October 08, 2019","path":"/four-functions-for-arrays","tags":["javascript","array","pure functions","functional programming"],"type":"post","excerpt":"It's very common to front array of numbers when working with data in javascript, and many time we need to do different operations with them. Here are four functions that will help you with this task","category":"javascript","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/d5fc8143db6dc6662782d89c6df87e58/a3fa0/rocket.png"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/49a21704a5bb82d398913aceb94c63af/48c6d/javascript.png"}}}}}},{"node":{"id":"c5809367-9a23-5a1b-8604-32082a2eaa6a","frontmatter":{"title":"Don't break apart one line arrow functions when printing in the console","date":"September 27, 2019","path":"/console-logs-without-breaking-apart-functions","tags":["javascript","react","pure functions","functional programming"],"type":"post","excerpt":"One of the most anoyying things when you are working in javascript is breaking apart into two lines an arrow function because you need to log in the console the values that you are receiving in your callback","category":"reactjs","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/0118eb51acd7ad8814b22e7566d35e28/a3fa0/prints.png"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/73ecf96398499dd6127dadc1e9e631ad/48c6d/reactjs.png"}}}}}},{"node":{"id":"fd1c0847-4136-5cca-b0ec-48f4c05e82c8","frontmatter":{"title":"A tricky meme for coercion","date":"September 17, 2019","path":"/a-tricky-meme-for-coercion","tags":["javascript","coercion","pure functions","functional programming"],"type":"post","excerpt":"Coercion is one of the most difficult things to understand in Javascript if you don't know how it's working behind the scenes and how types are applied when you are comparing to values.","category":"javascript","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/ab3b96c9951156631d7b496d7886b4ec/a3fa0/tricky-meme.png"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/49a21704a5bb82d398913aceb94c63af/48c6d/javascript.png"}}}}}},{"node":{"id":"07c170b0-a61d-55f4-bf06-9b2f77680938","frontmatter":{"title":"Intro to big notation","date":"July 12, 2019","path":"/intro-to-big-notation","tags":["javascript","big o notation","algorithms","functional programming"],"type":"post","excerpt":"There are many ways to reach a solution to solve a given problem in almost all life challenges and web development or coding won't be an exception.","category":"javascript","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/239311a03f9797f4361f2c5c14024c9b/a3fa0/big-o-notation-introduction.png"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/49a21704a5bb82d398913aceb94c63af/48c6d/javascript.png"}}}}}},{"node":{"id":"b4357493-41f6-52f9-8382-0b21a9dfd09d","frontmatter":{"title":"Angular Forms: Reactive approach","date":"May 21, 2018","path":"/angular-forms-reactive-approach","tags":["javascript","angular","angular forms","reactive forms"],"type":"post","excerpt":"Reactive forms means create forms programmatically. This practice allows us to develop a lot of features in our form which bring more control over them. These features could be validators, better access to FormControls, create new groups of FormControls or manage the form status or different changes which occur into it.","category":"angular","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/bfa46d2bc48987eca114ce614e2670e0/a3fa0/angular_forms_2.png"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/400f9d04b95a30fefc2839dcc8e519e4/48c6d/angular.png"}}}}}},{"node":{"id":"b08cc072-4e82-52a5-899a-07354eb1f6ca","frontmatter":{"title":"How javascript engine works","date":"May 18, 2018","path":"/how-javascript-engine-works","tags":["javascript","basic javascript","javascript engine","hoisting"],"type":"post","excerpt":"If we want to understand how javascript works beyond your code, you need to know three different concepts or ideas that you will see repeated throughout the rest of your life as a programmer.","category":"javascript","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/d8ed83a82cb821674d3066fcb48a91d8/a3fa0/js_engine.png"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/49a21704a5bb82d398913aceb94c63af/48c6d/javascript.png"}}}}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":12,"skip":0,"numPages":1,"currentPage":1}}