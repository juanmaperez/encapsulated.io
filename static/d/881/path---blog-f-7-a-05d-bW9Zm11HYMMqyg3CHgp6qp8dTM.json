{"data":{"allMarkdownRemark":{"totalCount":4,"edges":[{"node":{"id":"07c170b0-a61d-55f4-bf06-9b2f77680938","frontmatter":{"title":"Intro to big notation","date":"July 12, 2019","path":"/blog/intro-to-big-notation","tags":["javascript","big o notation","algorithms","functional programming"],"type":"post","excerpt":"There are many ways to reach a solution to solve a given problem in almost all life challenges and web development or coding won't be an exception.","category":"javascript","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/4191f2a23ed212a1d574cd81c657ad35/b4295/big-o-notation-introduction.jpg"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/49a21704a5bb82d398913aceb94c63af/48c6d/javascript.png"}}}}}},{"node":{"id":"5d9e8eba-5400-5d98-8325-c97e0c3e7cdd","frontmatter":{"title":"Angular Forms: Template Driven approach","date":"May 23, 2018","path":"/blog/angular-forms-template-driven-approach","tags":["javascript","angular","angular forms","template driven approach"],"type":"post","excerpt":"Template Driven is the most common way to manage forms in Angular when you start to dive into this framework. Although It offers fewer features than the Reactive approximation, sometimes It could be very useful. Mainly for forms which donâ€™t manage huge information.","category":"angular","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/f13e622ca613a6677ffb06adcebf4bd1/b4295/angular_forms_1.jpg"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/400f9d04b95a30fefc2839dcc8e519e4/48c6d/angular.png"}}}}}},{"node":{"id":"b4357493-41f6-52f9-8382-0b21a9dfd09d","frontmatter":{"title":"Angular Forms: Reactive approach","date":"May 21, 2018","path":"/blog/angular-forms-reactive-approach","tags":["javascript","angular","angular forms","reactive forms"],"type":"post","excerpt":"Reactive forms means create forms programmatically. This practice allows us to develop a lot of features in our form which bring more control over them. These features could be validators, better access to FormControls, create new groups of FormControls or manage the form status or different changes which occur into it.","category":"angular","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/a11b6cc04759a32d3a9ec12a13a9c841/b4295/angular_forms_2.jpg"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/400f9d04b95a30fefc2839dcc8e519e4/48c6d/angular.png"}}}}}},{"node":{"id":"b08cc072-4e82-52a5-899a-07354eb1f6ca","frontmatter":{"title":"How javascript engine works","date":"May 18, 2018","path":"/blog/how-javascript-engine-works","tags":["javascript","basic javascript","javascript engine","hoisting"],"type":"post","excerpt":"If we want to understand how javascript works beyond your code, you need to know three different concepts or ideas that you will see repeated throughout the rest of your life as a programmer.","category":"javascript","thumbnail":{"childImageSharp":{"fluid":{"src":"/static/0128ab93ee2f7733220ce82d07a540aa/b4295/js_engine.jpg"}}},"icon":{"childImageSharp":{"fluid":{"src":"/static/49a21704a5bb82d398913aceb94c63af/48c6d/javascript.png"}}}}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}